{% set conda_package_nonexistent = (
    "pymanopt",
) %}
{% set data = load_setup_py_data() %}

package:
  # Repeating name because of the following issue:
  # https://github.com/conda/conda-build/issues/2475
  name: brainiak
  version: 0.12.0

about:
  home: {{ data.get('url') }}
  license: {{ data.get('license') }}
  summary: {{ data.get('description') }}

source:
  path: ../

build:
  number: {{ environ.get('GIT_DESCRIBE_NUMBER', 0) }}
  script_env:

    # We need the source directory because conda removes source / working
    # directories by the time we reach the test phase. We can optionally pass in
    # the --keep-old-work flag later on to use the $PREFIX/work directory
    - BRAINIAK_HOME
    - MKL_THREADING_LAYER
    - KMP_DUPLICATE_LIB_OK

requirements:
  build:
    - {{ compiler('cxx') }}

  host:
    - python
    - pip
    - mpich
    - llvm-openmp
    - scikit-build-core
    - setuptools_scm>=8.0
    - pybind11>=2.9.0
    - scipy!=1.0.0
    - cython

  run:
    - python
    - numpy
    - mpi4py>=3
    - nitime
    - scikit-learn>=0.18
    - scipy!=1.0.0
    - statsmodels
    - psutil
    - nibabel
    - joblib
    - wheel
    - pydicom

test:
  commands:
    - find $BRAINIAK_HOME/tests | grep pycache | xargs rm -rf
    - pytest $BRAINIAK_HOME

      # Known issue: https://github.com/travis-ci/travis-ci/issues/4704#issuecomment-348435959
    - python -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL); fcntl.fcntl(sys.stdout, fcntl.F_SETFL, flags&~os.O_NONBLOCK);'
    - conda inspect linkages -p $PREFIX brainiak  # [not win]
    - conda inspect objects -p $PREFIX brainiak  # [osx]
  requires:
    - pytest
    - testbook
    - numdifftools
